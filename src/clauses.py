import aima.utils


def getClauses():
    clauses = []

    lenguajes = ["Python", "Java", "C++", "JavaScript", "Ruby", "Swift", "Go", "Rust", "PHP", "Haskell", "C#", "Perl",
                 "Objective-C", "TypeScript", "Kotlin", "Scala", "R", "Lua", "Matlab", "Groovy", "Clojure", "Shell",
                 "HTML", "CSS", "SQL", "Assembly", "F#", "Elixir", "Dart", "Julia", "Racket", "Fortran", "VB.NET",
                 ".Net"]
    for lenguaje in lenguajes:
        # inserta clausulas Lenguaje(X)
        clauses.append(aima.utils.expr("lenguaje(" + lenguaje + ")"))

    clauses.append(aima.utils.expr("framework(React)==> lenguaje(JavaScript)"))
    clauses.append(aima.utils.expr("framework(Angular)==> lenguaje(JavaScript)"))
    clauses.append(aima.utils.expr("framework(Vue.js)==> lenguaje(JavaScript)"))
    clauses.append(aima.utils.expr("framework(Django)==> lenguaje(Python)"))
    clauses.append(aima.utils.expr("framework(RubyonRails)==> lenguaje(Ruby)"))
    clauses.append(aima.utils.expr("framework(Laravel)==> lenguaje(PHP)"))
    clauses.append(aima.utils.expr("framework(Spring)==> lenguaje(Java)"))
    clauses.append(aima.utils.expr("framework(Express.js)==> lenguaje(JavaScript)"))
    clauses.append(aima.utils.expr("framework(ASP.NET)==> lenguaje(C#)"))
    clauses.append(aima.utils.expr("framework(Flask)==> lenguaje(Python)"))
    clauses.append(aima.utils.expr("framework(Symfony)==> lenguaje(PHP)"))
    clauses.append(aima.utils.expr("framework(ASP.NETCore)==> lenguaje(C#)"))
    clauses.append(aima.utils.expr("framework(Flutter)==> lenguaje(Dart)"))
    clauses.append(aima.utils.expr("framework(Ember.js)==> lenguaje(JavaScript)"))
    clauses.append(aima.utils.expr("framework(Xamarin)==> lenguaje(C#)"))
    clauses.append(aima.utils.expr("framework(Backbone.js)==> lenguaje(JavaScript)"))
    clauses.append(aima.utils.expr("framework(Meteor)==> lenguaje(JavaScript)"))
    clauses.append(aima.utils.expr("framework(Playframework)==> lenguaje(Java)"))
    clauses.append(aima.utils.expr("framework(CakePHP)==> lenguaje(PHP)"))
    clauses.append(aima.utils.expr("framework(CodeIgniter)==> lenguaje(PHP)"))
    clauses.append(aima.utils.expr("framework(Playframework)==> lenguaje(Scala)"))
    clauses.append(aima.utils.expr("framework(Angular)==> lenguaje(JavaScript)"))
    clauses.append(aima.utils.expr("framework(Express.js)==> lenguaje(Node.js)"))
    clauses.append(aima.utils.expr("framework(ASP.NET)==> lenguaje(VB.NET)"))

    clauses.append(aima.utils.expr("lenguaje(Python)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Java)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(C++)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Ruby)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Swift)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Go)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Rust)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(PHP)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Haskell)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(C#)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Perl)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Objective-C)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Kotlin)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Scala)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(R)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Lua)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Matlab)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Groovy)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Clojure)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Shell)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(SQL)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Assembly)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(F#)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Elixir)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Julia)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Racket)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(Fortran)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(VB.NET)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(.Net)==> lengorientado(Backend)"))
    clauses.append(aima.utils.expr("lenguaje(JavaScript)==> lengorientado(Frontend)"))
    clauses.append(aima.utils.expr("lenguaje(TypeScript)==> lengorientado(Frontend)"))
    clauses.append(aima.utils.expr("lenguaje(HTML)==> lengorientado(Frontend)"))
    clauses.append(aima.utils.expr("lenguaje(CSS)==> lengorientado(Frontend)"))
    clauses.append(aima.utils.expr("lenguaje(Dart)==> lengorientado(Frontend)"))

    paises = ["Estados Unidos", "Argentina", "Brasil", "Uruguay", "Paraguay", "Chile", "Bolivia", "México",
              "Inglaterra", "Francia", "Alemania"]

    for pais in paises:
        # inserta clausulas pais(X)
        clauses.append(aima.utils.expr("pais(", pais, ")"))

    clauses.append(aima.utils.expr("ciudad( Berlín)==> pais(Alemania)"))
    clauses.append(aima.utils.expr("ciudad( Múnich)==> pais(Alemania)"))
    clauses.append(aima.utils.expr("ciudad( Hamburgo)==> pais(Alemania)"))
    clauses.append(aima.utils.expr("ciudad( Fráncfort)==> pais(Alemania)"))
    clauses.append(aima.utils.expr("ciudad( Colonia)==> pais(Alemania)"))
    clauses.append(aima.utils.expr("ciudad( Buenos Aires)==> pais(Argentina)"))
    clauses.append(aima.utils.expr("ciudad( Córdoba)==> pais(Argentina)"))
    clauses.append(aima.utils.expr("ciudad( Rosario)==> pais(Argentina)"))
    clauses.append(aima.utils.expr("ciudad( Mendoza)==> pais(Argentina)"))
    clauses.append(aima.utils.expr("ciudad( Mar del Plata)==> pais(Argentina)"))
    clauses.append(aima.utils.expr("ciudad( La Paz)==> pais(Bolivia)"))
    clauses.append(aima.utils.expr("ciudad( Santa Cruz de la Sierra)==> pais(Bolivia)"))
    clauses.append(aima.utils.expr("ciudad( Cochabamba)==> pais(Bolivia)"))
    clauses.append(aima.utils.expr("ciudad( Sucre)==> pais(Bolivia)"))
    clauses.append(aima.utils.expr("ciudad( Potosí)==> pais(Bolivia)"))
    clauses.append(aima.utils.expr("ciudad( São Paulo)==> pais(Brasil)"))
    clauses.append(aima.utils.expr("ciudad( Río de Janeiro)==> pais(Brasil)"))
    clauses.append(aima.utils.expr("ciudad( Brasilia)==> pais(Brasil)"))
    clauses.append(aima.utils.expr("ciudad( Salvador)==> pais(Brasil)"))
    clauses.append(aima.utils.expr("ciudad( Belo Horizonte)==> pais(Brasil)"))
    clauses.append(aima.utils.expr("ciudad( Santiago)==> pais(Chile)"))
    clauses.append(aima.utils.expr("ciudad( Valparaíso)==> pais(Chile)"))
    clauses.append(aima.utils.expr("ciudad( Viña del Mar)==> pais(Chile)"))
    clauses.append(aima.utils.expr("ciudad( Concepción)==> pais(Chile)"))
    clauses.append(aima.utils.expr("ciudad( La Serena)==> pais(Chile)"))
    clauses.append(aima.utils.expr("ciudad( Nueva York)==> pais(Estados Unidos)"))
    clauses.append(aima.utils.expr("ciudad( Los Ángeles)==> pais(Estados Unidos)"))
    clauses.append(aima.utils.expr("ciudad( Chicago)==> pais(Estados Unidos)"))
    clauses.append(aima.utils.expr("ciudad( Miami)==> pais(Estados Unidos)"))
    clauses.append(aima.utils.expr("ciudad( San Francisco)==> pais(Estados Unidos)"))
    clauses.append(aima.utils.expr("ciudad( París)==> pais(Francia)"))
    clauses.append(aima.utils.expr("ciudad( Marsella)==> pais(Francia)"))
    clauses.append(aima.utils.expr("ciudad( Lyon)==> pais(Francia)"))
    clauses.append(aima.utils.expr("ciudad( Toulouse)==> pais(Francia)"))
    clauses.append(aima.utils.expr("ciudad( Niza)==> pais(Francia)"))
    clauses.append(aima.utils.expr("ciudad( Londres)==> pais(Inglaterra)"))
    clauses.append(aima.utils.expr("ciudad( Manchester)==> pais(Inglaterra)"))
    clauses.append(aima.utils.expr("ciudad( Birmingham)==> pais(Inglaterra)"))
    clauses.append(aima.utils.expr("ciudad( Liverpool)==> pais(Inglaterra)"))
    clauses.append(aima.utils.expr("ciudad( Bristol)==> pais(Inglaterra)"))
    clauses.append(aima.utils.expr("ciudad( Ciudad de México)==> pais(México)"))
    clauses.append(aima.utils.expr("ciudad( Cancún)==> pais(México)"))
    clauses.append(aima.utils.expr("ciudad( Guadalajara)==> pais(México)"))
    clauses.append(aima.utils.expr("ciudad( Monterrey)==> pais(México)"))
    clauses.append(aima.utils.expr("ciudad( Tijuana)==> pais(México)"))
    clauses.append(aima.utils.expr("ciudad( Asunción)==> pais(Paraguay)"))
    clauses.append(aima.utils.expr("ciudad( Ciudad del Este)==> pais(Paraguay)"))
    clauses.append(aima.utils.expr("ciudad( Encarnación)==> pais(Paraguay)"))
    clauses.append(aima.utils.expr("ciudad( Luque)==> pais(Paraguay)"))
    clauses.append(aima.utils.expr("ciudad( San Lorenzo)==> pais(Paraguay)"))
    clauses.append(aima.utils.expr("ciudad( Montevideo)==> pais(Uruguay)"))
    clauses.append(aima.utils.expr("ciudad( Punta del Este)==> pais(Uruguay)"))
    clauses.append(aima.utils.expr("ciudad( Colonia del Sacramento)==> pais(Uruguay)"))
    clauses.append(aima.utils.expr("ciudad( Salto)==> pais(Uruguay)"))
    clauses.append(aima.utils.expr("ciudad( Piriápolis)==> pais(Uruguay)"))

    clauses.append(aima.utils.expr("puesto(Frontend Engineer)"))
    clauses.append(aima.utils.expr("puesto(Backend Engineer)"))
    clauses.append(aima.utils.expr("puesto(Fullstack Engineer)"))
    clauses.append(aima.utils.expr("puesto(DBA)"))
    clauses.append(aima.utils.expr("puesto(Team Leader)"))
    clauses.append(aima.utils.expr("puesto(Software Engineer Manager)"))
    clauses.append(aima.utils.expr("puesto(Chief Technology Officer)"))
    clauses.append(aima.utils.expr("puesto(CTO)"))

    clauses.append(aima.utils.expr("experiencia(Senior)"))
    clauses.append(aima.utils.expr("experiencia( Semi-senior)"))
    clauses.append(aima.utils.expr("experiencia( Junior)"))
    clauses.append(aima.utils.expr("experiencia(Pasante)"))

    clauses.append(aima.utils.expr("idioma(Inglés)"))
    clauses.append(aima.utils.expr("idioma(Español)"))
    clauses.append(aima.utils.expr("idioma(Italiano)"))
    clauses.append(aima.utils.expr("idioma(Portugués)"))
    clauses.append(aima.utils.expr("idioma(Francés)"))
    clauses.append(aima.utils.expr("idioma(Alemán)"))

    clauses.append(aima.utils.expr("modalidad(Presencial)"))
    clauses.append(aima.utils.expr("modalidad(Virtual)"))
    clauses.append(aima.utils.expr("modalidad(Mixta)"))

    clauses.append(aima.utils.expr("disponibilidad(Part-time)"))
    clauses.append(aima.utils.expr("disponibilidad(Full-time)"))
    clauses.append(aima.utils.expr("disponibilidad(Freelance)"))


    return clauses
